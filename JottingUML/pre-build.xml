<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="make" name="webapps">
	<property name="project.root" value="${basedir}"/>
	<property name="lib" value="${basedir}/lib"/>
	<property name="webapps" value="${basedir}/src/webapps"/>
	<property name="build.webapps" value="${basedir}/build/classes/webapps"/>

	<taskdef name="js"
		classname="org.kotemaru.ant.task.JsTask"
		classpath="${lib}/jstask.jar;${lib}/js.jar"
	/>
	
	<target name="make" depends="make.cssloaders,make.jsloaders,make.htmlloaders" >
		<copy file="${webapps}/editor.html.template" 
			tofile="${webapps}/editor.html" 
			filtering="true" overwrite="yes" encoding="utf-8">
			<filterset>
				<filter token="cssloaders" value="${cssloaders}" />
				<filter token="jsloaders" value="${jsloaders}" />
				<filter token="htmlloaders" value="${htmlloaders}" />
			</filterset>
		</copy>
	</target>

	<property name="make.lodaer.js"><![CDATA[
	function makeLoaders(fmt, priority) {
		if (priority == null) priority = ["*"];
		prefix = prefix.replace(/\\/g,"/");
		
		// Priority numbering.
		var PRI = {};
		for (var i=0;i<priority.length;i++) {
			PRI[priority[i]] = i;
		}
		
		// make file name list.
		var names = [];
		var ite = fileset.iterator();
		while (ite.hasNext()) {
			var reg = new RegExp(prefix);
			var fname = (""+ite.next()).replace(/\\/g,"/").replace(reg,"");
			var pri = PRI[fname.match(/[^/]*$/)];
			if (pri == null) pri = PRI["*"];
			names.push({pri:pri, fname:fname});
		}
		
		// sort by priority.
		names.sort(function(a,b){
			if (a.pri != b.pri) return a.pri-b.pri;
			return a.fname>b.fname?1:-1;
		});
		
		// make loader string.
		var loaders = "";
		for (var i=0;i<names.length;i++) {
			//task.log(names[i].pri+":"+names[i].fname);
			loaders += fmt.replace("${fname}",names[i].fname);
		}
		return loaders;
	}
	]]></property>
	
	
	<target name="make.jsloaders">
		<js>
			<fileset dir="${webapps}/js" includes="**/*.js" />
			<param name="prefix" value="^${webapps}/" />
			
			<![CDATA[
			eval(""+task.project.getProperty("make.lodaer.js"));
			
			var PRIORITY = [
				"Lang.js",
				"Font.js", "Color.js",

				"Coor.js",	"CoorDiag.js", 
				"Elem.js", "Item.js",
				"Items.js",	"Handle.js",
				"Rectangle.js",
				"Group.js",	"SelectGroup.js",
			
				"Action.js",
				"*",
				"Editor.js"
			];
			var fmt = "<script src='${fname}'></script>\n";
			var loaders = makeLoaders(fmt,PRIORITY);
			task.project.setProperty("jsloaders",loaders);
			]]>
		</js>
		<echo>${jsloaders}</echo>
	</target>	
	
	<target name="make.cssloaders">
		<js>
			<fileset dir="${webapps}/css" includes="**/*.css" />
			<param name="prefix" value="^${webapps}/" />
			
			<![CDATA[
			eval(""+task.project.getProperty("make.lodaer.js"));
			
			var fmt = "<link rel='stylesheet' href='${fname}' type='text/css'/>\n";
			var loaders = makeLoaders(fmt); 
			task.project.setProperty("cssloaders",loaders);
			]]>
		</js>
		<echo>${cssloaders}</echo>
	</target>	
	
	<target name="make.htmlloaders">
		<js>
			<fileset dir="${webapps}/html" includes="**/*.html" />
			<param name="prefix" value="^${webapps}/" />
			
			<![CDATA[
			eval(""+task.project.getProperty("make.lodaer.js"));

			var fmt = "Util.include('${fname}');\n";
			var loaders = makeLoaders(fmt);
			task.project.setProperty("htmlloaders",loaders);
			]]>
		</js>
		<echo>${htmlloaders}</echo>
	</target>	

</project>
